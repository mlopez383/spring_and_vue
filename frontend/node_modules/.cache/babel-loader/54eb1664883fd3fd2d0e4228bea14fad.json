{"remainingRequest":"/mnt/G/PRACTICAS/HTML/VUE_SPRING/spring-boot-postgresql-vue-crud/frontend/node_modules/babel-loader/lib/index.js!/mnt/G/PRACTICAS/HTML/VUE_SPRING/spring-boot-postgresql-vue-crud/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/mnt/G/PRACTICAS/HTML/VUE_SPRING/spring-boot-postgresql-vue-crud/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/G/PRACTICAS/HTML/VUE_SPRING/spring-boot-postgresql-vue-crud/frontend/src/components/User.vue?vue&type=script&lang=js","dependencies":[{"path":"/mnt/G/PRACTICAS/HTML/VUE_SPRING/spring-boot-postgresql-vue-crud/frontend/src/components/User.vue","mtime":1718065669278},{"path":"/mnt/G/PRACTICAS/HTML/VUE_SPRING/spring-boot-postgresql-vue-crud/frontend/babel.config.js","mtime":1718065669274},{"path":"/mnt/G/PRACTICAS/HTML/VUE_SPRING/spring-boot-postgresql-vue-crud/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1718067821760},{"path":"/mnt/G/PRACTICAS/HTML/VUE_SPRING/spring-boot-postgresql-vue-crud/frontend/node_modules/babel-loader/lib/index.js","mtime":1718067821808},{"path":"/mnt/G/PRACTICAS/HTML/VUE_SPRING/spring-boot-postgresql-vue-crud/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1718067821760},{"path":"/mnt/G/PRACTICAS/HTML/VUE_SPRING/spring-boot-postgresql-vue-crud/frontend/node_modules/vue-loader/lib/index.js","mtime":1718067973153}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport UserDataService from \"../service/UserDataService\";\nexport default {\n  name: \"User\",\n  data: function data() {\n    return {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      errors: []\n    };\n  },\n  computed: {\n    id: function id() {\n      return this.$route.params.id;\n    }\n  },\n  methods: {\n    refreshUserDetails: function refreshUserDetails() {\n      var _this = this;\n      UserDataService.retrieveUser(this.id).then(function (res) {\n        _this.firstName = res.data.firstName;\n        _this.lastName = res.data.lastName;\n        _this.email = res.data.email;\n      });\n    },\n    validateAndSubmit: function validateAndSubmit(e) {\n      var _this2 = this;\n      e.preventDefault();\n      this.errors = [];\n      if (!this.firstName) {\n        this.errors.push(\"Enter valid values\");\n      } else if (this.firstName.length < 4) {\n        this.errors.push(\"Enter atleast 4 characters in First Name\");\n      }\n      if (!this.lastName) {\n        this.errors.push(\"Enter valid values\");\n      } else if (this.lastName.length < 4) {\n        this.errors.push(\"Enter atleast 4 characters in Last Name\");\n      }\n      if (this.errors.length === 0) {\n        if (this.id == -1) {\n          UserDataService.createUser({\n            firstName: this.firstName,\n            lastName: this.lastName,\n            email: this.email\n          }).then(function () {\n            _this2.$router.push(\"/users\");\n          });\n        } else {\n          UserDataService.updateUser(this.id, {\n            id: this.id,\n            firstName: this.firstName,\n            lastName: this.lastName,\n            email: this.email\n          }).then(function () {\n            _this2.$router.push(\"/users\");\n          });\n        }\n      }\n    }\n  },\n  created: function created() {\n    this.refreshUserDetails();\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AAEA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACA;IACA;EACA;EACAC;IACAC;MAAA;MACAC;QACAC;QACAA;QACAA;MACA;IACA;IACAC;MAAA;MACAC;MACA;MACA;QACA;MACA;QACA,iBACA;MACA;MACA;QACA;MACA;QACA,iBACA;MACA;MACA;QACA;UACAH;YACAR;YACAC;YACAC;UACA;YACAU;UACA;QACA;UACAJ;YACAH;YACAL;YACAC;YACAC;UACA;YACAU;UACA;QACA;MACA;IACA;EACA;EACAC;IACA;EACA;AACA","names":["name","data","firstName","lastName","email","errors","computed","id","methods","refreshUserDetails","UserDataService","_this","validateAndSubmit","e","_this2","created"],"sourceRoot":"src/components","sources":["User.vue"],"sourcesContent":["<template>\n  <div>\n    <h3>User</h3>\n    <div class=\"container\">\n      <form @submit=\"validateAndSubmit\">\n        <div v-if=\"errors.length\">\n          <div\n            class=\"alert alert-danger\"\n            v-bind:key=\"index\"\n            v-for=\"(error, index) in errors\"\n          >\n            {{ error }}\n          </div>\n        </div>\n        <fieldset class=\"form-group\">\n          <label>First Name</label>\n          <input type=\"text\" class=\"form-control\"\n           v-model=\"firstName\" />\n        </fieldset>\n        <fieldset class=\"form-group\">\n          <label>Last Name</label>\n          <input type=\"text\" class=\"form-control\"\n           v-model=\"lastName\" />\n        </fieldset>\n        <fieldset class=\"form-group\">\n          <label>Email</label>\n          <input type=\"text\" class=\"form-control\" \n          v-model=\"email\" />\n        </fieldset>\n        <button class=\"btn btn-success\" \n        type=\"submit\">Save</button>\n      </form>\n    </div>\n  </div>\n</template>\n<script>\nimport UserDataService from \"../service/UserDataService\";\n\nexport default {\n  name: \"User\",\n  data() {\n    return {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      errors: [],\n    };\n  },\n  computed: {\n    id() {\n      return this.$route.params.id;\n    },\n  },\n  methods: {\n    refreshUserDetails() {\n      UserDataService.retrieveUser(this.id).then((res) => {\n        this.firstName = res.data.firstName;\n        this.lastName = res.data.lastName;\n        this.email = res.data.email;\n      });\n    },\n    validateAndSubmit(e) {\n      e.preventDefault();\n      this.errors = [];\n      if (!this.firstName) {\n        this.errors.push(\"Enter valid values\");\n      } else if (this.firstName.length < 4) {\n        this.errors.push\n        (\"Enter atleast 4 characters in First Name\");\n      }\n      if (!this.lastName) {\n        this.errors.push(\"Enter valid values\");\n      } else if (this.lastName.length < 4) {\n        this.errors.push\n        (\"Enter atleast 4 characters in Last Name\");\n      }\n      if (this.errors.length === 0) {\n        if (this.id == -1) {\n          UserDataService.createUser({\n            firstName: this.firstName,\n            lastName: this.lastName,\n            email: this.email,\n          }).then(() => {\n            this.$router.push(\"/users\");\n          });\n        } else {\n          UserDataService.updateUser(this.id, {\n            id: this.id,\n            firstName: this.firstName,\n            lastName: this.lastName,\n            email: this.email,\n          }).then(() => {\n            this.$router.push(\"/users\");\n          });\n        }\n      }\n    },\n  },\n  created() {\n    this.refreshUserDetails();\n  },\n};\n</script>\n"]}]}